- name: Show deploy info
  ansible.builtin.debug:
    msg: Deploying TLJH version {{ tljh_version }} to {{ inventory_hostname }}

- name: Show https info
  ansible.builtin.debug:
    msg: HTTPS enabled
  when: tljh_https

- name: Show delete info
  ansible.builtin.debug:
    msg: Existing TLJH installation will be deleted.
  when: tljh_delete_existing

- name: Get services list
  service_facts:
  when: tljh_delete_existing

- name: Disable traefik service
  become: true
  systemd:
    name: traefik
    enabled: no
    state: stopped
  register: stop_service
  failed_when:
    - stop_service.failed == true
  when: tljh_delete_existing and 'traefik.service' in services

- name: Disable jupyterhub service
  become: true
  systemd:
    name: jupyterhub
    enabled: no
    state: stopped
  register: stop_service
  failed_when:
    - stop_service.failed == true
  when: tljh_delete_existing and 'jupyterhub.service' in services

- name: Delete existing TLJH installation
  become: true
  ansible.builtin.file:
    path: "{{ tljh_prefix }}"
    state: absent
  when: tljh_delete_existing

- name: Check if TLJH is installed
  stat:
    path: "{{ tljh_prefix }}"
  register: tljh_directory

- name: Install TLJH if not installed
  block:
    #- include_role:
    #    name: geerlingguy.docker

    - name: Install required packages for TLJH
      become: true
      apt:
        name:
          - curl
          - python3
          - python3-pip
          - python3-dev
          - python3-venv
          - build-essential
          - cifs-utils
        state: latest
        update_cache: yes

    - name: Download the TLJH installer
      become: true
      get_url:
        url: "{{ tljh_installer_url }}"
        dest: "{{ tljh_installer_dest }}"

    - name: Run the TLJH installer
      become: true
      shell: |
        {{ discovered_interpreter_python }} {{ tljh_installer_dest }} --version {{ tljh_version }} --admin {{ tljh_admin_user }}

    - name: Restart the JupyterHub service with daemon-reload
      become: true
      tags:
        - config
      systemd:
        name: jupyterhub
        state: restarted
        enabled: yes
        daemon_reload: yes

    - name: Configure Let's Encrypt email and domain
      become: true
      shell: |
        tljh-config set https.enabled true
        tljh-config set https.letsencrypt.email {{ letsencrypt_email }}
        tljh-config add-item https.letsencrypt.domains {{ letsencrypt_domain }}
        tljh-config reload proxy
      when: tljh_https
      vars:
        letsencrypt_domain: "{{ inventory_hostname }}"
  when: not tljh_directory.stat.exists

# - name: Copy the JupyterHub config
#   become: true
#   template:
#     src: jupyterhub_config.py
#     dest: "{{ jupyterhub_config_dest }}"
#     mode: preserve

# - name: Create the admin user
#   ansible.builtin.user:
#     name: "{{ tljh_admin_user }}"
#     group: "sudo"
#     password: "{{ tljh_admin_pass | password_hash('sha512') }}"
#     state: present

# - name: Reset the list of admin users to avoid duplicates
#   become: true
#   shell: tljh-config unset users.admin
#   register: admins
#   failed_when: admins.rc > 1

# - name: Add admin users
#   become: true
#   shell: tljh-config add-item users.admin {{ tljh_admin_user }}

- name: Restart the JupyterHub service with daemon-reload
  become: true
  tags:
    - config
  systemd:
    name: jupyterhub
    state: restarted
    enabled: yes
    daemon_reload: yes